#!/bin/bash
#

# Dado que este script se puede usar tanto desde linea de comandos
# como desde el rc.local (mediante "source ./etc/rc.lab.d/14-autologin")
# con este truco ajustamos el uso de "exit" o "return"
# http://stackoverflow.com/questions/2683279/how-to-detect-if-a-script-is-being-sourced
EXIT=exit
[ "${BASH_SOURCE[0]}" != "${0}" ] && EXIT=return

base=/root

# Comprobamos si tenemos que activar el login de UPM
grep -q 'UPM_LOGIN' /proc/cmdline || ${EXIT} 0

# Vemos si tenemos los paquetes necesarios
[ -f /usr/local/local/JavaPamCas.tgz ] || ${EXIT} 0

# este script forma parte del sistema de autenticación via siu.upm.es
# lo que hacemos es 
# - detener gdm
# - crear un .xinitrc para el usuario
# - descomprimir el paquete JavaPasCam
# - lanzar startx 

# Paramos GDM
systemctl stop gdm3
# systemctl disable gdm3

# Generamos un .xinitrc para el usuario
# hacemos que las X se ejecuten en /dev/tty2, pues el tty1 está ocupado por la consola
# para evitar lios ponemos como display :1
mkdir -p ${base}
rm -f ${base}/.xinitrc
rm -f ${base}/.Xauthority
cat << __EOF > ${base}/upm_login.sh
#!/bin/bash
/usr/bin/Xorg :1 vt1 &
sleep 5
DISPLAY=:1 /usr/bin/xhost +
DISPLAY=:1 ${base}/JavaPamCas/compile.sh -r -f >> ${base}/upm_login.log &
DISPLAY=:1 /usr/bin/mutter --sm-disable --replace &
__EOF
# y lo instalamos
chown root ${base}/upm_login.sh
chmod +x ${base}/upm_login.sh

#instalamos la app de acceso remoto
cd ${base}
tar zxf /usr/local/local/JavaPamCas.tgz
chown -R root ${base}/JavaPamCas

#re-arrancamos entorno gráfico
#systemctl restart gdm
su -l root -c ${base}/upm_login.sh &

${EXIT} 0

